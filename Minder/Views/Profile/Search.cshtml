@model Minder.Models.ProfileSearchViewModel

@{
    ViewBag.Title = "Search";
}

<h2>Search</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Find your match</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            <label class="control-label col-md-2">Age from/to</label>
            <div class="col-md-10">
                <b>0</b> <input id="ageSlider" name="AgeRange" type="text" class="span2" value="" data-slider-min="0" data-slider-max="100" data-slider-step="1" data-slider-value="[18,25]" /> <b>100</b>
                @Html.ValidationMessageFor(model => model.AgeRange, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Height from/to</label>
            <div class="col-md-10">
                <b>0</b> <input id="heightSlider" name="HeightRange" type="text" class="span2" value="" data-slider-min="0" data-slider-max="300" data-slider-step="1" data-slider-value="[100,300]" /> <b>100</b>
                @Html.ValidationMessageFor(model => model.HeightRange, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Range, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Range, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Range, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EducationPreferences, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ int i = 0; }
                @foreach (Minder.Models.EducationEnum item in Enum.GetValues(typeof(Minder.Models.EducationEnum)))
                {

                    {
                        @Html.CheckBox("EducationPreferences[" + @i + "].IsSelected", false)
                        @Html.Hidden("EducationPreferences[" + @i + "].Education", item.ToString())
                        @Html.Label("EducationPreferences", item.ToString())
                        i++;
                        <br />
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EthnicityPreferences, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ i = 0; }
                @foreach (Minder.Models.EthnicityEnum item in Enum.GetValues(typeof(Minder.Models.EthnicityEnum)))
                {
                    {
                        @Html.CheckBox("EthnicityPreferences[" + @i + "].IsSelected", false)
                        @Html.Hidden("EthnicityPreferences[" + @i + "].Ethnicity", item.ToString())
                        @Html.Label("EthnicityPreferences", item.ToString())
                        i++;
                        <br />
                    }
                }
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
                    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/bootstrap-slider.min.js"></script>
    <script>
        $("#ageSlider").slider({});
        $("#heightSlider").slider({});
    </script>
}
